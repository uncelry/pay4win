# Generated by Django 3.2.6 on 2021-08-15 21:07

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AbstractLottery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lottery_type', models.CharField(choices=[('g', 'Золото'), ('s', 'Серебро'), ('b', 'Бронза')], default='g', help_text='Тип розыгрыша:\nЗолото - 5 билетов\nСеребро - 10 билетов\nБронза - 20 билетов', max_length=1, verbose_name='Тип розыгрыша')),
                ('tickets_amount', models.IntegerField(verbose_name='Кол-во билетов в розыгрыше')),
                ('commission_num', models.IntegerField(verbose_name='Комиссия с розыгрыша в рублях')),
                ('lotteries_amount', models.IntegerField(verbose_name='Кол-во розыгрышей такого вида')),
                ('lottery_active', models.BooleanField(default=True, help_text='Если хотите выключить такие розыгрыши, снимите галочку, вместоудаления записи', verbose_name='Активен ли такой вид розыгрышей?')),
            ],
            options={
                'verbose_name': 'Розыгрыш',
                'verbose_name_plural': 'Розыгрыши',
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(help_text='Введите частый вопрос', max_length=200)),
                ('answer', models.TextField(help_text='Введите краткий и понятный ответ на вопрос', max_length=3000)),
            ],
            options={
                'verbose_name': 'FAQ',
                'verbose_name_plural': 'FAQs',
            },
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.CharField(max_length=300, verbose_name='Ссылка на игру')),
                ('img', models.ImageField(upload_to='', verbose_name='Картинка игры (230x320)')),
                ('name', models.CharField(max_length=250, verbose_name='Название игры steam')),
                ('desc', models.TextField(max_length=550, verbose_name='Описание игры')),
                ('price', models.IntegerField(verbose_name='Цена игры Steam в рублях')),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Введите название жанра (Например: Экшн, Шутер, Хоррор и т.п.)', max_length=200)),
            ],
            options={
                'verbose_name': 'Жанр',
                'verbose_name_plural': 'Жанры',
            },
        ),
        migrations.CreateModel(
            name='LotteryGame',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Уникальный ID этого розыгрыша', primary_key=True, serialize=False, verbose_name='UUID розыгрыша')),
                ('lottery_type', models.CharField(choices=[('g', 'Золото'), ('s', 'Серебро'), ('b', 'Бронза')], default='g', help_text='Тип розыгрыша:\nЗолото - 5 билетов\nСеребро - 10 билетов\nБронза - 20 билетов', max_length=1, verbose_name='Тип розыгрыша')),
                ('time_started', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата и время старта розыгрыша')),
                ('time_finished', models.DateTimeField(blank=True, null=True, verbose_name='Дата и время окончания розыгрыша')),
                ('tickets_amount', models.IntegerField(verbose_name='Кол-во билетов в розыгрыше')),
                ('ticket_price', models.IntegerField(verbose_name='Цена билета в розыгрыше')),
                ('commission_num', models.IntegerField(verbose_name='Комиссия с розыгрыша в рублях')),
                ('players_amount', models.IntegerField(default=0, verbose_name='Кол-во текущих игроков')),
                ('lottery_state', models.CharField(choices=[('o', 'Идет'), ('c', 'Окончена')], default='o', help_text='Идет/Выбор победителя/Окончена', max_length=1, verbose_name='Текущее состояние лотереи')),
                ('tickets_bought', models.IntegerField(default=0, verbose_name='Куплено билетов')),
                ('tickets_left', models.IntegerField(verbose_name='Билетов осталось')),
                ('lottery_progress', models.IntegerField(default=0, verbose_name='Процент купленных билетов')),
                ('abstract_lottery', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lottery.abstractlottery', verbose_name='Родительский розыгрыш')),
            ],
        ),
        migrations.CreateModel(
            name='SteamUser',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='auth.user', verbose_name='Пользователь')),
                ('steam_id', models.CharField(max_length=50, verbose_name='steam_id')),
                ('community_visibility_state', models.CharField(max_length=10, verbose_name='Видимость профиля steam')),
                ('profile_state', models.CharField(max_length=10, verbose_name='Имеется ли профиль сообщества steam')),
                ('persona_name', models.CharField(max_length=200, verbose_name='Отображаемое имя пользователя steam')),
                ('profile_url', models.CharField(max_length=200, verbose_name='Ссылка на профиль steam')),
                ('avatar', models.CharField(max_length=400, verbose_name='Автар (маленький размер)')),
                ('avatar_medium', models.CharField(max_length=400, verbose_name='Автар (средний размер)')),
                ('avatar_full', models.CharField(max_length=400, verbose_name='Автар (полный размер)')),
                ('avatar_hash', models.CharField(max_length=256, verbose_name='Хэш сумма аватара')),
                ('last_logoff', models.CharField(max_length=256, verbose_name='Дата последнего онлайна (по юникс)')),
                ('persona_state', models.CharField(max_length=10, verbose_name='Текущий статус пользователя')),
                ('primary_clan_id', models.CharField(max_length=100, verbose_name='ID основного клана пользователя steam')),
                ('time_created', models.CharField(max_length=256, verbose_name='Дата регистрации аккаунта steam (по юникс)')),
                ('persona_state_flags', models.CharField(max_length=10, verbose_name='С чего пользователь онлайн и прочее')),
                ('time_registered', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата и время регистрации на Pay4Win')),
                ('time_last_logged_in', models.DateTimeField(null=True, verbose_name='Последняя дата и время входа на Pay4Win')),
                ('lotteries_total_amount', models.IntegerField(default=0, verbose_name='Всего игр сыграно')),
                ('lotteries_gold_amount', models.IntegerField(default=0, verbose_name='Золотых игр сыграно')),
                ('lotteries_silver_amount', models.IntegerField(default=0, verbose_name='Серебряных игр сыграно')),
                ('lotteries_bronze_amount', models.IntegerField(default=0, verbose_name='Бронзовых игр сыграно')),
                ('money_saved', models.IntegerField(default=0, verbose_name='Всего сэкономлено денег (в рублях)')),
                ('lotteries_won_amount', models.IntegerField(default=0, verbose_name='Всего игр выиграно')),
                ('lotteries_lost_amount', models.IntegerField(default=0, verbose_name='Всего игр проиграно')),
                ('money_current', models.IntegerField(default=0, verbose_name='Текущий баланс')),
                ('profile_is_private', models.BooleanField(default=False, verbose_name='Приватен ли профиль на сервисе?')),
                ('lotteries_finished', models.ManyToManyField(blank=True, related_name='users_finished_lottery', to='lottery.LotteryGame', verbose_name='Игры, в которых участвовал пользователь')),
                ('lotteries_ongoing', models.ManyToManyField(blank=True, related_name='users_ongoing_lottery', to='lottery.LotteryGame', verbose_name='Игры, в которых участвует пользователь')),
            ],
            options={
                'verbose_name': 'Steam пользователь',
                'verbose_name_plural': 'Steam пользователи',
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lottery', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='lottery.lotterygame', verbose_name='Розыгрыш, которому принадлежит билет')),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lottery.steamuser', verbose_name='Владелец билета')),
            ],
        ),
        migrations.AddField(
            model_name='lotterygame',
            name='lottery_winner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_lottery_winner', to='lottery.steamuser', verbose_name='Победитель'),
        ),
        migrations.AddField(
            model_name='lotterygame',
            name='players',
            field=models.ManyToManyField(blank=True, to='lottery.SteamUser', verbose_name='Текущие игроки'),
        ),
        migrations.CreateModel(
            name='GameSliderVideo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preview', models.CharField(max_length=500, verbose_name='Ссылка на превью для видео игры')),
                ('video', models.CharField(max_length=500, verbose_name='Ссылка на видео игры')),
                ('game', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='lottery.game', verbose_name='Игра, к которой относится видео')),
            ],
        ),
        migrations.CreateModel(
            name='GameSliderPicture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pic_small', models.CharField(max_length=500, verbose_name='Ссылка на маленькую картинку игры')),
                ('pic_medium', models.CharField(max_length=500, verbose_name='Ссылка на среднюю картинку игры')),
                ('pic_large', models.CharField(max_length=500, verbose_name='Ссылка на большую картинку игры')),
                ('game', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='lottery.game', verbose_name='Игра, к которой относятся фото')),
            ],
        ),
        migrations.AddField(
            model_name='game',
            name='genres',
            field=models.ManyToManyField(to='lottery.Genre', verbose_name='Жанры игры из стим'),
        ),
        migrations.AddField(
            model_name='abstractlottery',
            name='game',
            field=models.ForeignKey(default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='lottery.game', verbose_name='Разыгрываемая игра'),
        ),
    ]
